group_by(team)%>%
summarise(gp=n(), wins=sum(sumWin), gFor=sum(gFor), gA=sum(gAgainst))%>%
ungroup() %>%
mutate(loss=gp-wins, .after=wins) %>%
arrange(desc(wins), desc(gFor))
View(teamTable)
heaad(teamTable)
head(teamTable)
datatable(teamTable, options = list(
pageLength =5),
caption="Team Stats",
colnames = c("Team", "Games Played", "Wins", "Loss", "Goal For", "Goals Against"), rownames = F)
unlink("stats_cache", recursive = TRUE)
kable(teamTable)%>%
knitr::kable(caption = "ANOVA: Effect of genotype on ED50")%>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'), full_width = FALSE)
library(kableExtra)
kable(teamTable)%>%
knitr::kable(caption = "ANOVA: Effect of genotype on ED50")%>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'), full_width = FALSE)
kable(teamTable)%$%
knitr::kable(caption = "ANOVA: Effect of genotype on ED50")%>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'), full_width = FALSE)
kable(teamTable)
kable(teamTable)%>%
knitr::kable(caption = "ANOVA: Effect of genotype on ED50")
knitr::kable(teamTable, caption = "ANOVA: Effect of genotype on ED50")%>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'), full_width = FALSE)
knitr::kable(teamTable, caption = "Team Stats", col.names =  c("Team", "Games Played", "Wins", "Loss", "Goal For", "Goals Against"))%>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'), full_width = FALSE,
)
datatable(DOM = 'Bt',teamTable, options = list(
pageLength =5),
caption="Team Stats",
colnames = c("Team", "Games Played", "Wins", "Loss", "Goal For", "Goals Against"), rownames = F)
datatable(teamTable, options = list(
pageLength =5),DOM = 'Bt'
caption="Team Stats",
datatable(teamTable, options = list(
pageLength =5),DOM = 'Bt',
caption="Team Stats",
colnames = c("Team", "Games Played", "Wins", "Loss", "Goal For", "Goals Against"), rownames = F)
datatable(teamTable, options = list(DOM = 'Bt',
pageLength =5),
caption="Team Stats",
colnames = c("Team", "Games Played", "Wins", "Loss", "Goal For", "Goals Against"), rownames = F)
dat <- read_excel("data/krustStats.xlsx") %>%
clean_names("lower_camel") %>%
mutate(player=as.factor(player), team=as.factor(team), opponent=as.factor(opponent)) %>%
replace(is.na(.), 0)
knitr::opts_chunk$set(echo = FALSE, inclue=FALSE, warning = F)
library(tidyverse)
library(DT)
library(stringr)
library(readxl)
library(janitor)
library(lubridate)
library(kableExtra)
dat <- read_excel("data/krustStats.xlsx") %>%
clean_names("lower_camel") %>%
mutate(player=as.factor(player), team=as.factor(team), opponent=as.factor(opponent)) %>%
replace(is.na(.), 0)
sumGame <- dat %>%
group_by(game, team)%>%
summarise(gFor=sum(goals), win=ifelse(gFor==11, "winner", "loser"))%>%
ungroup()
gamesWider <- sumGame%>%
dplyr::select(-team)%>%
pivot_wider(names_from = win, values_from = gFor)%>%
left_join(sumGame, ., by="game") %>%
mutate(gFor=ifelse(win=="winner", winner, loser),
gAgainst=ifelse(win=="winner", loser, winner),
sumWin=ifelse(win=="winner", 1, 0))
teamTable <- gamesWider %>%
group_by(team)%>%
summarise(gp=n(), wins=sum(sumWin), gFor=sum(gFor), gA=sum(gAgainst))%>%
ungroup() %>%
mutate(loss=gp-wins, .after=wins) %>%
arrange(desc(wins), desc(gFor))
names(dat)
sumPlay <- dat%>%
mutate(total=sum(across(7:13),na.rm=T))
View(sumPlay)
sumPlay <- dat%>%
mutate(total=sumSum(across(7:13),na.rm=T))
sumPlay <- dat%>%
mutate(total=rowSum(across(7:13),na.rm=T))
rlang::last_trace()
sumPlay <- dat%>%
mutate(total=rowSums(across(7:13),na.rm=T))
View(sumPlay)
sumPlay <- dat%>%
mutate(total=rowSums(across(7:13),na.rm=T)) %>%
filter(total!=0)%>%
group_by(team,player)%>%
dplyr::summarize(gp=n(),touches=sum(touches),catches=sum(catches),drops=sum(drops),
throwaways=sum(throwaways), assists=sum(assists), goals=sum(goals),
sum(ds),  plusMinus=sum(x))%>%
mutate(player=as.factor(player), team=as.factor(team)) %>%
replace(is.na(.), 0) %>%
ungroup()
View(sumPlay)
sumPlay <- dat%>%
mutate(total=rowSums(across(7:13),na.rm=T)) %>%
filter(total!=0)%>%
group_by(team,player)%>%
dplyr::summarize(gp=n(),touches=sum(touches),catches=sum(catches),drops=sum(drops),
throwaways=sum(throwaways), assists=sum(assists), goals=sum(goals),
ds=sum(ds),  plusMinus=sum(x))%>%
mutate(player=as.factor(player), team=as.factor(team)) %>%
replace(is.na(.), 0) %>%
ungroup()
View(sumPlay)
datatable(sumPlay, options = list(
pageLength = 11,
lengthMenu = c(11, 22, 33, 44)),
caption="Summarized Player Stats",
colnames = c("Team", "Player", "Games Played","Touches", "Catches", "Drops", "Throw Aways", "Assists", "Goals", "Ds", "Plus/Minus"), filter = "top" , rownames = F)
unlink("stats_cache", recursive = TRUE)
dat <- read_excel("data/krustStats.xlsx") %>%
clean_names("lower_camel") %>%
mutate(player=as.factor(player), team=as.factor(team), opponent=as.factor(opponent)) %>%
replace(is.na(.), 0)
knitr::opts_chunk$set(echo = FALSE, inclue=FALSE, warning = F)
library(tidyverse)
library(DT)
library(stringr)
library(readxl)
library(janitor)
library(lubridate)
library(kableExtra)
dat <- read_excel("data/krustStats.xlsx") %>%
clean_names("lower_camel") %>%
mutate(player=as.factor(player), team=as.factor(team), opponent=as.factor(opponent)) %>%
replace(is.na(.), 0)
View(dat)
dat <- read_excel("data/krustStats.xlsx") %>%
clean_names("lower_camel") %>%
mutate(player=as.factor(player), team=as.factor(team), opponent=as.factor(opponent)) %>%
replace(is.na(.), 0)  %>%
mutate(date=ymd(date))
dat <- read_excel("data/krustStats.xlsx") %>%
clean_names("lower_camel") %>%
mutate(player=as.factor(player), team=as.factor(team), opponent=as.factor(opponent)) %>%
replace(is.na(.), 0)  %>%
mutate(date=ymd(date), dummyDate=paste(month(date), day(date), sep="/"))
View(dat)
dat <- read_excel("data/krustStats.xlsx") %>%
clean_names("lower_camel") %>%
mutate(player=as.factor(player), team=as.factor(team), opponent=as.factor(opponent)) %>%
replace(is.na(.), 0)  %>%
mutate(date=ymd(date), dummyDate=paste(month(date), day(date), sep="/"))
dat <- read_excel("data/krustStats.xlsx") %>%
clean_names("lower_camel") %>%
mutate(player=as.factor(player), team=as.factor(team), opponent=as.factor(opponent)) %>%
replace(is.na(.), 0)  %>%
mutate(date=ymd(date), dummyDate=paste(month(date), day(date), sep="/"))
knitr::opts_chunk$set(echo = FALSE, inclue=FALSE, warning = F)
library(tidyverse)
library(DT)
library(stringr)
library(readxl)
library(janitor)
library(lubridate)
library(kableExtra)
dat <- read_excel("data/krustStats.xlsx") %>%
clean_names("lower_camel") %>%
mutate(player=as.factor(player), team=as.factor(team), opponent=as.factor(opponent)) %>%
replace(is.na(.), 0)  %>%
mutate(date=ymd(date))
datatable(dplyr::select(dat, -time),
options = list(
pageLength = 10,
lengthMenu = c(10, 20, 30, 40)),
caption="Player Stats by Game",
colnames = c("Game", "Date", "Opponent", "Team", "Player", "Touches", "Catches", "Drops", "Throw Aways", "Assists", "Goals", "Ds", "Plus/Minus"), filter = "top" , rownames = F)
??lubridate
week(dat$date)
datatable(dplyr::select(dat, -time),
options = list(
pageLength = 10,
lengthMenu = c(10, 20, 30, 40)),
caption="Player Stats by Game",
colnames = c("Game", "Date", "Opponent", "Team", "Player", "Touches", "Catches", "Drops", "Throw Aways", "Assists", "Goals", "Ds", "Plus/Minus"), filter = "top" , rownames = F)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
script <- as.data.frame(NULL)
runApp()
runApp()
script <- bind_rows(script, "P1_Catch")
library(shiny)
library(tidyverse)
library(magrittr)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinyThings")
library(devtools)
install_github("gadenbuie/shinyThings")
library(shinyThings)
runApp()
runApp()
runApp('app2')
runApp('app2')
runApp('app2')
?shinyInput
??shinyInput
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
library(tidyverse)
library(readxl)
team <- read_excel("data/teamTest.xlsx")
runApp('app2')
getwd()
team <- read_excel("../data/teamTest.xlsx")
runApp('app2')
names(team)
length(team$player)
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runExample("text")
runExample("02_text")
runApp('app2')
runExample("02_text")
runExample("03")
runExample("03_reactivity")
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
run_examples("02")
runExamples("02")
runExample()
runExample("04_mpg")
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
runApp('app2')
sumGame <- dat %>%
group_by(game, team)%>%
summarise(gFor=sum(goals), win=ifelse(gFor==11, "winner", "loser"))%>%
ungroup()
knitr::opts_chunk$set(echo = FALSE, inclue=FALSE, warning = F)
library(tidyverse)
library(DT)
library(stringr)
library(readxl)
library(janitor)
library(lubridate)
library(kableExtra)
dat <- read_excel("data/krustStats.xlsx") %>%
clean_names("lower_camel") %>%
mutate(player=as.factor(player), team=as.factor(team), opponent=as.factor(opponent)) %>%
replace(is.na(.), 0)  %>%
mutate(date=ymd(date))
sumGame <- dat %>%
group_by(game, team)%>%
summarise(gFor=sum(goals), win=ifelse(gFor==11, "winner", "loser"))%>%
ungroup()
gamesWider <- sumGame%>%
dplyr::select(-team)%>%
pivot_wider(names_from = win, values_from = gFor)%>%
left_join(sumGame, ., by="game") %>%
mutate(gFor=ifelse(win=="winner", winner, loser),
gAgainst=ifelse(win=="winner", loser, winner),
sumWin=ifelse(win=="winner", 1, 0))
teamTable <- gamesWider %>%
group_by(team)%>%
summarise(gp=n(), wins=sum(sumWin), gFor=sum(gFor), gA=sum(gAgainst))%>%
ungroup() %>%
mutate(loss=gp-wins, .after=wins) %>%
arrange(desc(wins), desc(gFor))
datatable(teamTable, options = list(DOM = 'Bt',
pageLength =5),
caption="Team Stats",
colnames = c("Team", "Games Played", "Wins", "Loss", "Goal For", "Goals Against"), rownames = F)
teamTable <- gamesWider %>%
group_by(team)%>%
summarise(gp=n(), wins=sum(sumWin), gFor=sum(gFor), gA=sum(gAgainst))%>%
ungroup() %>%
mutate(loss=gp-wins, .after=wins, diff=gFor-gA) %>%
arrange(desc(wins), desc(gFor))
datatable(teamTable, options = list(DOM = 'Bt',
pageLength =5),
caption="Team Stats",
colnames = c("Team", "Games Played", "Wins", "Loss", "Goal For", "Goals Against", "Differential"), rownames = F)
View(teamTable)
teamTable <- gamesWider %>%
group_by(team)%>%
summarise(gp=n(), wins=sum(sumWin), gFor=sum(gFor), gA=sum(gAgainst))%>%
ungroup() %>%
mutate(loss=gp-wins, diff=gFor-gA,.after=wins) %>%
arrange(desc(wins), desc(gFor))
View(teamTable)
teamTable <- gamesWider %>%
group_by(team)%>%
summarise(gp=n(), wins=sum(sumWin), gFor=sum(gFor), gA=sum(gAgainst))%>%
ungroup() %>%
mutate(loss=gp-wins,.after=wins, diff=gFor-gA,.after=wins) %>%
arrange(desc(wins), desc(gFor))
teamTable <- gamesWider %>%
group_by(team)%>%
summarise(gp=n(), wins=sum(sumWin), gFor=sum(gFor), gA=sum(gAgainst))%>%
ungroup() %>%
mutate(loss=gp-wins,.after=wins) %>%
mutate(diff=gFor-gA,.after=gA) %>%
arrange(desc(wins), desc(diff))
datatable(teamTable, options = list(DOM = 'Bt',
pageLength =5),
caption="Team Stats",
colnames = c("Team", "Games Played", "Wins", "Loss", "Goal For", "Goals Against", "Differential"), rownames = F)
sumPlay <- dat%>%
mutate(total=rowSums(across(7:13),na.rm=T)) %>%
filter(total!=0)%>%
group_by(team,player)%>%
dplyr::summarize(gp=n(),touches=sum(touches),catches=sum(catches),drops=sum(drops),
throwaways=sum(throwaways), assists=sum(assists), goals=sum(goals),
ds=sum(ds),  plusMinus=sum(x))%>%
mutate(player=as.factor(player), team=as.factor(team)) %>%
replace(is.na(.), 0) %>%
ungroup()
View(dat)
sumPlay <- dat%>%
mutate(total=rowSums(across(8:14),na.rm=T)) %>%
filter(total!=0)%>%
group_by(team,player)%>%
dplyr::summarize(gp=n(),touches=sum(touches),catches=sum(catches),drops=sum(drops),
throwaways=sum(throwaways), assists=sum(assists), goals=sum(goals),
ds=sum(ds),  plusMinus=sum(x))%>%
mutate(player=as.factor(player), team=as.factor(team)) %>%
replace(is.na(.), 0) %>%
ungroup()
datatable(sumPlay, options = list(
pageLength = 11,
lengthMenu = c(11, 22, 33, 44, 55)),
caption="Summarized Player Stats",
colnames = c("Team", "Player", "Games Played","Touches", "Catches", "Drops", "Throw Aways", "Assists", "Goals", "Ds", "Plus/Minus"), filter = "top" , rownames = F)
datatable(dplyr::select(dat, -time),
options = list(
pageLength = 11,
lengthMenu = c(11, 22, 33, 44, 55)),
caption="Player Stats by Game",
colnames = c("Week", "Game", "Date", "Opponent", "Team", "Player", "Touches", "Catches", "Drops", "Throw Aways", "Assists", "Goals", "Ds", "Plus/Minus"), filter = "top" , rownames = F)
datatable(teamTable, options = list(DOM = 'Bt',
pageLength =5),
caption="Team Stats",
colnames = c("Team", "Games Played", "Wins", "Loss", "Goal For", "Goals Against", "Differential"), rownames = F, options=list(dom="t"))
datatable(teamTable, options = list(DOM = 't',
pageLength =5),
caption="Team Stats",
colnames = c("Team", "Games Played", "Wins", "Loss", "Goal For", "Goals Against", "Differential"), rownames = F)
unlink("stats_cache", recursive = TRUE)
View(dat)
dat <- read_excel("data/krustStats.xlsx") %>%
clean_names("lower_camel") %>%
mutate(player=as.factor(player), team=as.factor(team), opponent=as.factor(opponent)) %>%
replace(is.na(.), 0)  %>%
mutate(date=ymd(date), week=as.integer(week), game=as.integer(game))
